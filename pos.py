# -*- coding: utf-8 -*-
"""

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TNdXwevtgZZNObXQv0BYUi-_9ch5DffN
"""

import pandas as pd

def total(data, data_weather, time):
    # 売れた個数の合計を求める
    data = data.drop([time], axis=1)
    data = data.groupby('分類名')['個数'].apply(lambda x: x.sum())

    # 結合のための前処理
    data_weather['data'] = data_weather['分類名'].str.cat(data_weather[time], sep='/')
    data_weather = data_weather.drop(['分類名', time], axis=1)

    # 売れた個数の合計を求める
    data_weather = data_weather.groupby('data')['個数'].apply(lambda x: x.sum())
    data_weather = pd.DataFrame(data_weather)
    data_weather = data_weather.reset_index()
    data_weather['分類名'] = data_weather['data'].str.split('/', expand=True)[0]

    # 商品の個数と天気のデータと商品の売れた個数のデータを結合
    data_weather = pd.merge(data_weather, data, on='分類名')
    data_weather = data_weather.drop(['分類名'], axis=1)

    # 計算
    data_weather['個数_x/個数_y'] = data_weather['個数_x'] / data_weather['個数_y']
    data_weather = data_weather[(data_weather['個数_x/個数_y'] <= 0.2) & (data_weather['個数_x'] >= 5)]

    return data_weather

# データのダウンロード
data_columns = ['店舗立地','YYYY','MM','DD','個数','hh','分類名']
weather_columns = ['年','月','日','天気概況(昼：06時～18時)','天気概況(夜：18時～翌日06時)']

data2005 = pd.read_csv('/content/drive/MyDrive/receipt_2005_2010.csv', usecols=data_columns)
data2011 = pd.read_csv('/content/drive/MyDrive/receipt_2011.csv', usecols=data_columns)
data2012 = pd.read_csv('/content/drive/MyDrive/receipt_2012.csv', usecols=data_columns)
data = pd.concat([data2005, data2011, data2012])

weather2005 = pd.read_csv('/content/drive/MyDrive/weather_tokyo_2005_2010.csv', encoding='cp932', usecols=weather_columns)
weather2011 = pd.read_csv('/content/drive/MyDrive/wether_tokyo_2011.csv', encoding='cp932', usecols=weather_columns)
weather2012 = pd.read_csv('/content/drive/MyDrive/wether_tokyo_2012.csv', encoding='cp932', usecols=weather_columns)
weather = pd.concat([weather2005, weather2011, weather2012])

# 住宅街に絞る
data = data.query("店舗立地 == '住宅街1' | 店舗立地 == '住宅街2' | 店舗立地 == '住宅街３' | 店舗立地 == 'ローサイド１' | 店舗立地 == 'ローサイド３' | 店舗立地 == 'オフィス街４' | 店舗立地 == '駅前５'")

# 日付作成
data['date'] = pd.to_datetime(data['YYYY'].astype(str) + '/' + data['MM'].astype(str) + '/' + data['DD'].astype(str), format='%Y/%m/%d').dt.strftime('%Y/%m/%d')
weather['date'] = pd.to_datetime(weather['年'].astype(str) + '/' + weather['月'].astype(str) + '/' + weather['日'].astype(str), format='%Y/%m/%d').dt.strftime('%Y/%m/%d')

data = data.drop(['YYYY','MM','DD'], axis=1)
weather = weather.drop(['年','月','日'], axis=1)

# 晴、曇、雨のうち最初に出てきたものを抽出
weather['天気概況(昼：06時～18時)'] = weather['天気概況(昼：06時～18時)'].str.extract('(晴|曇|雨)', expand=False)
weather['天気概況(夜：18時～翌日06時)'] = weather['天気概況(夜：18時～翌日06時)'].str.extract('(晴|曇|雨)', expand=False)

data = data.dropna()

# データの結合
data_weather = pd.merge(data, weather, on='date', how='outer')

# 削除
data_weather = data_weather.drop(['店舗立地', 'date'], axis=1)

# データ型の変換
data_weather['個数'] = pd.to_numeric(data_weather['個数'], errors='coerce')
data_weather['hh'] = pd.to_numeric(data_weather['hh'], errors='coerce')

# 昼夜を分ける
data_weather_moring = data_weather[(data_weather['hh'] >= 6) & (data_weather['hh'] < 18)]
data_weather_moring = data_weather_moring.drop(['hh', '天気概況(夜：18時～翌日06時)'], axis=1)

data_weather_night = data_weather[(data_weather['hh'] < 6) | (data_weather['hh'] >= 18)]
data_weather_night = data_weather_night.drop(['hh', '天気概況(昼：06時～18時)'], axis=1)

# 晴れ曇り雨の比率を合わせる
data_weather_moring.loc[data_weather_moring['天気概況(昼：06時～18時)'] == '雨', '個数'] = data_weather_moring.loc[data_weather_moring['天気概況(昼：06時～18時)'] == '雨', '個数'] * 3.5
data_weather_night.loc[data_weather_night['天気概況(夜：18時～翌日06時)'] == '雨', '個数'] = data_weather_night.loc[data_weather_night['天気概況(夜：18時～翌日06時)'] == '雨', '個数'] * 3.5

# コピー
data_moring = data_weather_moring.copy()
data_night = data_weather_night.copy()

data_weather_moring = total(data_moring, data_weather_moring, '天気概況(昼：06時～18時)')
data_weather_night = total(data_night, data_weather_night, '天気概況(夜：18時～翌日06時)')